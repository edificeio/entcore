{"version":3,"file":"conversation-history.js","sources":["../../src/conversation-history/conversation-history.ts"],"sourcesContent":["import { mergeAttributes, Node } from '@tiptap/core';\nimport { Plugin } from 'prosemirror-state';\n\n/**\n * The `ConversationHistory` node is a custom ProseMirror node that represents a block-level\n * container for conversation history. It is implemented using the `@tiptap/core` library.\n *\n * @name ConversationHistory\n * @group block\n * @content block\n *\n * @parseHTML\n * This method defines how to parse the HTML representation of the node. It looks for a `div`\n * element with the class `conversation-history`.\n *\n * @renderHTML\n * This method defines how to render the node as HTML. It creates a `div` element with the class\n * `conversation-history`.\n *\n * @addProseMirrorPlugins\n * This method adds a ProseMirror plugin to the node. The plugin appends a transaction that groups\n * all nodes after a horizontal rule (`horizontalRule`) into a single `conversationHistory` node.\n *\n * @plugin\n * The plugin's `appendTransaction` method is called whenever a transaction is appended. It checks\n * for nodes after a horizontal rule and groups them into a `conversationHistory` node if any are\n * found.\n *\n * @param transactions - The list of transactions that have been applied.\n * @param oldState - The previous editor state.\n * @param newState - The new editor state.\n * @returns A new transaction if modifications were made, otherwise `null`.\n */\nexport const ConversationHistory = Node.create({\n  name: 'converstationHistory',\n  group: 'block',\n  content: 'block',\n\n  parseHTML() {\n    return [\n      {\n        tag: 'div.conversation-history',\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\n      'div',\n      mergeAttributes(HTMLAttributes, { class: 'conversation-history' }),\n      0,\n    ];\n  },\n\n  /**\n   * Adds custom ProseMirror plugins to the editor.\n   * When a horizontal rule is encountered, this plugin collects all nodes\n   * following the horizontal rule until the end of the document.\n   * These nodes are then grouped together and replaced with\n   * a single node of the same type as the plugin's type.\n   *\n   * @returns {Plugin[]} An array of ProseMirror plugins.\n   */\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        appendTransaction: (transactions, oldState, newState) => {\n          const tr = newState.tr;\n          let modified = false;\n          const nodesAfterHr = [];\n\n          newState.doc.descendants((node, pos, parent) => {\n            if (\n              node.type.name === 'horizontalRule' &&\n              parent.type.name === 'doc'\n            ) {\n              const start = pos;\n              const end = newState.doc.content.size;\n\n              newState.doc.nodesBetween(start, end, (n, p, parent) => {\n                if (\n                  n.type.name !== 'horizontalRule' &&\n                  parent.type.name === 'doc'\n                ) {\n                  nodesAfterHr.push({ node: n, pos: p });\n                } else {\n                  return false;\n                }\n              });\n\n              if (nodesAfterHr.length > 0) {\n                const groupNode = this.type.create(\n                  {},\n                  nodesAfterHr.map((n) => n.node),\n                );\n                tr.replaceWith(start, end, groupNode);\n                modified = true;\n              }\n              return false;\n            }\n          });\n\n          return modified ? tr : null;\n        },\n      }),\n    ];\n  },\n});\n"],"names":["parent"],"mappings":";;AAiCa,MAAA,sBAAsB,KAAK,OAAO;AAAA,EAC7C,MAAM;AAAA,EACN,OAAO;AAAA,EACP,SAAS;AAAA,EAET,YAAY;AACH,WAAA;AAAA,MACL;AAAA,QACE,KAAK;AAAA,MAAA;AAAA,IAET;AAAA,EACF;AAAA,EAEA,WAAW,EAAE,kBAAkB;AACtB,WAAA;AAAA,MACL;AAAA,MACA,gBAAgB,gBAAgB,EAAE,OAAO,wBAAwB;AAAA,MACjE;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,wBAAwB;AACf,WAAA;AAAA,MACL,IAAI,OAAO;AAAA,QACT,mBAAmB,CAAC,cAAc,UAAU,aAAa;AACvD,gBAAM,KAAK,SAAS;AACpB,cAAI,WAAW;AACf,gBAAM,eAAe,CAAC;AAEtB,0BAAS,IAAI,YAAY,CAAC,MAAM,KAAK,WAAW;AAC9C,gBACE,KAAK,KAAK,SAAS,oBACnB,OAAO,KAAK,SAAS,OACrB;AACA,oBAAM,QAAQ,KACR,MAAM,SAAS,IAAI,QAAQ;AAa7B,kBAXJ,SAAS,IAAI,aAAa,OAAO,KAAK,CAAC,GAAG,GAAGA,YAAW;AACtD,oBACE,EAAE,KAAK,SAAS,oBAChBA,QAAO,KAAK,SAAS;AAErB,+BAAa,KAAK,EAAE,MAAM,GAAG,KAAK,GAAG;AAAA;AAE9B,yBAAA;AAAA,cACT,CACD,GAEG,aAAa,SAAS,GAAG;AACrB,sBAAA,YAAY,KAAK,KAAK;AAAA,kBAC1B,CAAC;AAAA,kBACD,aAAa,IAAI,CAAC,MAAM,EAAE,IAAI;AAAA,gBAChC;AACG,mBAAA,YAAY,OAAO,KAAK,SAAS,GACzB,WAAA;AAAA,cAAA;AAEN,qBAAA;AAAA,YAAA;AAAA,UACT,CACD,GAEM,WAAW,KAAK;AAAA,QAAA;AAAA,MAE1B,CAAA;AAAA,IACH;AAAA,EAAA;AAEJ,CAAC;"}