import { Ref } from "react";
import { TreeData } from "../../../types";
import { TreeViewHandlers_V1 } from "../TreeView";
export declare const useTreeView: ({ data, ref, externalSelectedNodeId, draggedNode, allExpandedNodes, onTreeItemUnfold, onTreeItemFold, onTreeItemClick, }: {
    data: TreeData | TreeData[];
    ref: Ref<TreeViewHandlers_V1>;
    externalSelectedNodeId: string | undefined;
    draggedNode?: {
        isOver: boolean;
        overId: string | undefined;
        isTreeview: boolean;
    } | undefined;
    allExpandedNodes?: boolean | undefined;
    /**
     * Callback function to provide unfolded item to parent component
     */
    onTreeItemUnfold?: ((nodeId: string) => void) | undefined;
    /**
     * Callback function to provide folded item to parent component
     */
    onTreeItemFold?: ((nodeId: string) => void) | undefined;
    /**
     * Callback function to provide selected item to parent component
     */
    onTreeItemClick?: ((nodeId: string) => void) | undefined;
}) => {
    selectedNodeId: string | undefined;
    expandedNodes: Set<string>;
    siblingsNodes: import("react").MutableRefObject<Set<string>>;
    draggedNodeId: string | undefined;
    handleItemClick: (nodeId: string) => void;
    handleFoldUnfold: (nodeId: string) => void;
};
