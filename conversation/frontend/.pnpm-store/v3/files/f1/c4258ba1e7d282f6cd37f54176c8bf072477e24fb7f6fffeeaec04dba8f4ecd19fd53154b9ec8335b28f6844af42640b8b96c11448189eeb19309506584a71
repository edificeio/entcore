{"version":3,"file":"audio.cjs","sources":["../../src/audio/audio.ts"],"sourcesContent":["import { mergeAttributes, Node } from '@tiptap/core';\n\nexport interface AudioOptions {\n  url: string;\n  HTMLAttributes: Record<string, any>;\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    audio: {\n      /**\n       * Set a audio node\n       * @param options.updateSelection set to true will select the newly inserted content\n       */\n      setAudio: (\n        id: string,\n        src: string,\n        options?: { updateSelection: boolean },\n      ) => ReturnType;\n    };\n  }\n}\n\nexport const Audio = Node.create({\n  name: 'audio',\n  group: 'inline',\n\n  inline: true,\n  selectable: true,\n  draggable: true,\n\n  addAttributes() {\n    return {\n      src: {\n        default: null,\n        parseHTML: (el: any) => (el as HTMLSpanElement).getAttribute('src'),\n        renderHTML: (attrs: any) => ({ src: attrs.src }),\n      },\n      documentId: {\n        default: '',\n        renderHTML: (attributes: any) => {\n          return { 'data-document-id': attributes.documentId };\n        },\n        parseHTML: (element: any) => element.getAttribute('data-document-id'),\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'div.audio-wrapper>audio,audio',\n        getAttrs: (el: any) => ({\n          src: (el as HTMLAudioElement).getAttribute('src'),\n        }),\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\n      'div',\n      { class: 'audio-wrapper' },\n      ['audio', mergeAttributes(HTMLAttributes)],\n    ];\n  },\n\n  addCommands() {\n    return {\n      setAudio:\n        (id, src, options) =>\n        ({ commands, state }) => {\n          return commands.insertContentAt(\n            state.selection,\n            `<audio \n              src=\"${src}\" \n              controls preload=\"none\"\n              data-document-id=\"${id}\"></audio>`,\n            options,\n          );\n        },\n    };\n  },\n});\n"],"names":["Node","mergeAttributes"],"mappings":"mHAuBa,MAAQA,UAAK,OAAO,CAC/B,KAAM,QACN,MAAO,SAEP,OAAQ,GACR,WAAY,GACZ,UAAW,GAEX,eAAgB,CACP,MAAA,CACL,IAAK,CACH,QAAS,KACT,UAAY,IAAa,GAAuB,aAAa,KAAK,EAClE,WAAa,QAAgB,CAAE,IAAK,MAAM,GAAI,EAChD,EACA,WAAY,CACV,QAAS,GACT,WAAa,aACJ,CAAE,mBAAoB,WAAW,UAAW,GAErD,UAAY,SAAiB,QAAQ,aAAa,kBAAkB,CAAA,CAExE,CACF,EAEA,WAAY,CACH,MAAA,CACL,CACE,IAAK,gCACL,SAAW,KAAa,CACtB,IAAM,GAAwB,aAAa,KAAK,CAClD,EAAA,CAEJ,CACF,EAEA,WAAW,CAAE,gBAAkB,CACtB,MAAA,CACL,MACA,CAAE,MAAO,eAAgB,EACzB,CAAC,QAASC,KAAgB,gBAAA,cAAc,CAAC,CAC3C,CACF,EAEA,aAAc,CACL,MAAA,CACL,SACE,CAAC,GAAI,IAAK,UACV,CAAC,CAAE,SAAU,SACJ,SAAS,gBACd,MAAM,UACN;AAAA,qBACS,GAAG;AAAA;AAAA,kCAEU,EAAE,aACxB,OACF,CAEN,CAAA,CAEJ,CAAC"}