{"version":3,"file":"attachment-transformer.js","sources":["../../src/attachment/attachment-transformer.ts"],"sourcesContent":["import { Node } from '@tiptap/core';\n\nexport interface AttachmentOptions {\n  HTMLAttributes: Record<string, string>;\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    attachment: {\n      setAttachment: (attachment) => ReturnType;\n    };\n  }\n}\n\nexport const AttachmentTransformer = Node.create<AttachmentOptions>({\n  name: 'attachments',\n  content: '',\n  marks: '',\n  group: 'inline',\n  inline: true,\n  selectable: true,\n  atom: true,\n  draggable: true,\n\n  addOptions() {\n    return {\n      HTMLAttributes: {\n        class: 'attachments',\n      },\n    };\n  },\n\n  parseHTML() {\n    return [{ tag: 'div[class=attachments]' }];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const links = HTMLAttributes.links;\n\n    const renderedLinks = links.map((el) => {\n      return [\n        'a',\n        {\n          name: el.name,\n          href: el.href,\n          documentId: el.documentId,\n          dataContentType: el.dataContentType,\n        },\n        el.name,\n      ];\n    });\n\n    return ['div', this.options.HTMLAttributes, ...renderedLinks];\n  },\n\n  addAttributes() {\n    return {\n      links: {\n        default: [],\n        parseHTML: (element) => {\n          const links = element.getElementsByTagName('a');\n          const parsedLinks = [];\n\n          for (let i = 0; i < links.length; i++) {\n            const link = links[i];\n            const href = link.getAttribute('href');\n            const name = link.textContent;\n            const regexResult = href.match(/([^/]+$)/);\n            const documentId =\n              link.getAttribute('data-document-id') ||\n              (regexResult && regexResult[0]);\n            const dataContentType = link.getAttribute('data-content-type');\n\n            parsedLinks.push({\n              href,\n              name,\n              documentId,\n              dataContentType,\n            });\n          }\n\n          return parsedLinks;\n        },\n        renderHTML: (attributes) => {\n          return {\n            links: attributes.links.map((link) => ({\n              href: link.href,\n              name: link.name,\n              documentId: link.documentId,\n              dataContentType: link.dataContentType,\n            })),\n          };\n        },\n      },\n    };\n  },\n\n  addCommands() {\n    return {\n      setAttachment:\n        (\n          attrs = {\n            dataContentType: '',\n            name: '',\n            documentId: '',\n            href: '',\n          },\n        ) =>\n        ({ chain }) => {\n          return chain().insertContent({ type: this.name, attrs }).run();\n        },\n    };\n  },\n});\n"],"names":[],"mappings":";AAca,MAAA,wBAAwB,KAAK,OAA0B;AAAA,EAClE,MAAM;AAAA,EACN,SAAS;AAAA,EACT,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,MAAM;AAAA,EACN,WAAW;AAAA,EAEX,aAAa;AACJ,WAAA;AAAA,MACL,gBAAgB;AAAA,QACd,OAAO;AAAA,MAAA;AAAA,IAEX;AAAA,EACF;AAAA,EAEA,YAAY;AACV,WAAO,CAAC,EAAE,KAAK,0BAA0B;AAAA,EAC3C;AAAA,EAEA,WAAW,EAAE,kBAAkB;AAG7B,UAAM,gBAFQ,eAAe,MAED,IAAI,CAAC,OACxB;AAAA,MACL;AAAA,MACA;AAAA,QACE,MAAM,GAAG;AAAA,QACT,MAAM,GAAG;AAAA,QACT,YAAY,GAAG;AAAA,QACf,iBAAiB,GAAG;AAAA,MACtB;AAAA,MACA,GAAG;AAAA,IACL,CACD;AAED,WAAO,CAAC,OAAO,KAAK,QAAQ,gBAAgB,GAAG,aAAa;AAAA,EAC9D;AAAA,EAEA,gBAAgB;AACP,WAAA;AAAA,MACL,OAAO;AAAA,QACL,SAAS,CAAC;AAAA,QACV,WAAW,CAAC,YAAY;AAChB,gBAAA,QAAQ,QAAQ,qBAAqB,GAAG,GACxC,cAAc,CAAC;AAErB,mBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AAC/B,kBAAA,OAAO,MAAM,CAAC,GACd,OAAO,KAAK,aAAa,MAAM,GAC/B,OAAO,KAAK,aACZ,cAAc,KAAK,MAAM,UAAU,GACnC,aACJ,KAAK,aAAa,kBAAkB,KACnC,eAAe,YAAY,CAAC,GACzB,kBAAkB,KAAK,aAAa,mBAAmB;AAE7D,wBAAY,KAAK;AAAA,cACf;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YAAA,CACD;AAAA,UAAA;AAGI,iBAAA;AAAA,QACT;AAAA,QACA,YAAY,CAAC,gBACJ;AAAA,UACL,OAAO,WAAW,MAAM,IAAI,CAAC,UAAU;AAAA,YACrC,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,YACX,YAAY,KAAK;AAAA,YACjB,iBAAiB,KAAK;AAAA,UAAA,EACtB;AAAA,QACJ;AAAA,MACF;AAAA,IAEJ;AAAA,EACF;AAAA,EAEA,cAAc;AACL,WAAA;AAAA,MACL,eACE,CACE,QAAQ;AAAA,QACN,iBAAiB;AAAA,QACjB,MAAM;AAAA,QACN,YAAY;AAAA,QACZ,MAAM;AAAA,MAAA,MAGV,CAAC,EAAE,YACM,MAAA,EAAQ,cAAc,EAAE,MAAM,KAAK,MAAM,OAAO,EAAE,IAAI;AAAA,IAEnE;AAAA,EAAA;AAEJ,CAAC;"}