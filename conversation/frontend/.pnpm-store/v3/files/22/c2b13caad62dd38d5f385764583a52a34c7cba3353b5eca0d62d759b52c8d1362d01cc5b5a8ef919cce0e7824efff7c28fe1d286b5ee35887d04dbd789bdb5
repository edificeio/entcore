{"version":3,"file":"hyperlink.js","sources":["../../src/hyperlink/hyperlink.ts"],"sourcesContent":["import { Link } from '@tiptap/extension-link';\n\n/** Our own model of an hyperlink in a rich document. */\nexport type HyperlinkAttributes = {\n  href: string | null;\n  target: '_blank' | null;\n  title: string | null;\n  text: string | null;\n};\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    hyperlink: {\n      /**\n       * Set an hyperlink mark\n       */\n      setLink: (attributes: Partial<HyperlinkAttributes>) => ReturnType;\n      /**\n       * Toggle an hyperlink mark\n       */\n      toggleLink: (attributes: {\n        href: string;\n        target?: string | null;\n      }) => ReturnType;\n      /**\n       * Unset an hyperlink mark\n       */\n      unsetLink: () => ReturnType;\n    };\n  }\n}\n\n/**\n * Hyperlink (external links), extends `Link` extension from TipTap.\n *\n * Links to external resources MUST NOT have a `data-id` nor a `data-app-prefix` attribute.\n * The `target` attribute has to be sanitized, so it is overriden.\n */\nexport const Hyperlink = Link.extend({\n  name: 'hyperlink',\n\n  parseHTML() {\n    return [\n      {\n        tag: 'a[href]:not([href *= \"javascript:\" i])',\n        // Be sure no data-id and data-app-prefix attribute exists :\n        // it would then be an Linker, not an Hyperlink !\n        getAttrs: (node: HTMLAnchorElement) => {\n          // See https://prosemirror.net/docs/ref/version/0.18.0.html#model.ParseRule.getAttrs\n          if (\n            node.getAttribute('data-id') &&\n            node.getAttribute('data-app-prefix')\n          )\n            return false;\n        },\n      },\n    ];\n  },\n\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      openOnClick: false,\n      HTMLAttributes: {\n        ...this.parent?.().HTMLAttributes,\n        target: null,\n      },\n    };\n  },\n\n  /* Manage `title` and `target` attributes. */\n  addAttributes() {\n    return {\n      // Preserve attributes of parent extension...\n      ...this.parent?.(),\n      // ...then add or override the following :\n      //------------------\n      target: {\n        default: this.options.HTMLAttributes.target,\n        // Sanitize target value\n        parseHTML: (element) =>\n          element.getAttribute('target') !== '_blank' ? null : '_blank',\n        renderHTML: (attributes) => ({\n          target: attributes['target'],\n        }),\n      },\n      title: {\n        default: this.options.HTMLAttributes.title,\n      },\n    };\n  },\n});\n"],"names":[],"mappings":";AAsCa,MAAA,YAAY,KAAK,OAAO;AAAA,EACnC,MAAM;AAAA,EAEN,YAAY;AACH,WAAA;AAAA,MACL;AAAA,QACE,KAAK;AAAA;AAAA;AAAA,QAGL,UAAU,CAAC,SAA4B;AAErC,cACE,KAAK,aAAa,SAAS,KAC3B,KAAK,aAAa,iBAAiB;AAE5B,mBAAA;AAAA,QAAA;AAAA,MACX;AAAA,IAEJ;AAAA,EACF;AAAA,EAEA,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG,UAAK,WAAL;AAAA,MACH,aAAa;AAAA,MACb,gBAAgB;AAAA,QACd,IAAG,UAAK,WAAL,8BAAgB;AAAA,QACnB,QAAQ;AAAA,MAAA;AAAA,IAEZ;AAAA,EACF;AAAA;AAAA,EAGA,gBAAgB;;AACP,WAAA;AAAA;AAAA,MAEL,IAAG,UAAK,WAAL;AAAA;AAAA;AAAA,MAGH,QAAQ;AAAA,QACN,SAAS,KAAK,QAAQ,eAAe;AAAA;AAAA,QAErC,WAAW,CAAC,YACV,QAAQ,aAAa,QAAQ,MAAM,WAAW,OAAO;AAAA,QACvD,YAAY,CAAC,gBAAgB;AAAA,UAC3B,QAAQ,WAAW;AAAA,QACrB;AAAA,MACF;AAAA,MACA,OAAO;AAAA,QACL,SAAS,KAAK,QAAQ,eAAe;AAAA,MAAA;AAAA,IAEzC;AAAA,EAAA;AAEJ,CAAC;"}