import { jsxs, Fragment, jsx } from "react/jsx-runtime";
import EmojiPicker, { Categories } from "emoji-picker-react";
import { useTranslation } from "react-i18next";
import SvgIconSmiley from "../../../icons/components/IconSmiley.js";
import { useEditorContext } from "../../hooks/useEditorContext.js";
import Tooltip from "../../../../components/Tooltip/Tooltip.js";
import IconButton from "../../../../components/Button/IconButton.js";
import Dropdown from "../../../../components/Dropdown/Dropdown.js";
const EditorToolbarEmoji = ({
  triggerProps,
  itemRefs
}) => {
  const {
    t
  } = useTranslation(), {
    editor
  } = useEditorContext();
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsx(Tooltip, { message: t("tiptap.toolbar.emojisPicker"), placement: "top", children: /* @__PURE__ */ jsx(IconButton, { ...triggerProps, type: "button", variant: "ghost", color: "tertiary", icon: /* @__PURE__ */ jsx(SvgIconSmiley, {}), "aria-label": t("tiptap.toolbar.emojisPicker") }) }),
    /* @__PURE__ */ jsx(Dropdown.Menu, { children: /* @__PURE__ */ jsx("div", { ref: (el) => itemRefs.current["emoji-picker"] = el, children: /* @__PURE__ */ jsx(EmojiPicker, { height: 400, width: 316, onEmojiClick: (emoji) => editor == null ? void 0 : editor.commands.insertContentAt(editor.view.state.selection, emoji.emoji), previewConfig: {
      showPreview: !1
    }, searchDisabled: !0, categories: [{
      category: Categories.SUGGESTED,
      name: `${t("tiptap.toolbar.emojis.recentlyUsed")}`
    }, {
      category: Categories.SMILEYS_PEOPLE,
      name: `${t("tiptap.toolbar.emojis.people")}`
    }, {
      category: Categories.ANIMALS_NATURE,
      name: `${t("tiptap.toolbar.emojis.animalsNature")}`
    }, {
      category: Categories.FOOD_DRINK,
      name: `${t("tiptap.toolbar.emojis.foodDrink")}`
    }, {
      category: Categories.TRAVEL_PLACES,
      name: `${t("tiptap.toolbar.emojis.travelPlaces")}`
    }, {
      category: Categories.ACTIVITIES,
      name: `${t("tiptap.toolbar.emojis.activities")}`
    }, {
      category: Categories.OBJECTS,
      name: `${t("tiptap.toolbar.emojis.objects")}`
    }, {
      category: Categories.SYMBOLS,
      name: `${t("tiptap.toolbar.emojis.symbols")}`
    }, {
      category: Categories.FLAGS,
      name: `${t("tiptap.toolbar.emojis.flags")}`
    }] }) }) })
  ] });
};
export {
  EditorToolbarEmoji
};
