/// <reference types="react" />
import * as PIXI from "pixi.js";
/**
 * This hook expose all the functions available for the pixi editor:
 * - all the effects (crop, resize, rotate, blur)
 * - historize every action
 * - backup functions
 *
 * @param args.spriteName The spriteName of the original image
 * @param args.imageSrc The URL of the image to edit
 * @returns all the action available for the image editor
 */
export default function useImageEditor({ imageSrc, spriteName, }: {
    imageSrc: string;
    spriteName?: string;
}): {
    historyCount: number;
    setApplication: import("react").Dispatch<import("react").SetStateAction<PIXI.Application<PIXI.ICanvas> | undefined>>;
    restore: () => Promise<void>;
    stopCrop: (save: boolean) => void;
    stopBlur: () => void;
    stopResize: (save: boolean) => void;
    startResize: () => Promise<void>;
    startCrop: () => Promise<void>;
    startBlur: () => Promise<void>;
    rotate: () => Promise<void>;
    toBlob: () => Promise<Blob | undefined>;
    toDataURL: () => string | undefined;
    loading: boolean;
};
