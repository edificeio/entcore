import { jsx as t, jsxs as N } from "react/jsx-runtime";
import { useBreakpoint as R, Card as S, useScrollToTop as k, useOdeClient as w } from "@edifice-ui/react";
import { useSpring as $, animated as v } from "@react-spring/web";
import { useQueryClient as j } from "@tanstack/react-query";
import { o as C, s as z, j as A, k as B, a as E } from "./index2.js";
import { useState as q, useId as L, useEffect as M } from "react";
import { useDroppable as P, useDraggable as Q } from "@dnd-kit/core";
import { Files as G } from "@edifice-ui/icons";
import { D as H } from "./DraggableCard.js";
const O = ({
  app: r,
  name: c,
  idFolder: l,
  isSelected: i = !1,
  isSelectable: m = !0,
  onClick: D,
  onSelect: b
}) => {
  const [o, a] = q(!1), p = L(), {
    lg: F
  } = R(), {
    setNodeRef: y
  } = P({
    id: p,
    data: {
      id: l,
      name: c,
      isTreeview: !1,
      accepts: ["folder", "resource"]
    }
  }), {
    attributes: I,
    listeners: u,
    setNodeRef: g,
    transform: e
  } = Q({
    id: p,
    data: {
      id: l,
      type: "folder"
    },
    disabled: !F
  }), s = C(), d = z(), h = (n) => {
    g(n), y(n);
  }, f = d.overId === l, T = !d.canMove && d.isTreeview ? "no-drop" : o ? "grabbing" : "default", x = {
    transform: `translate3d(${((e == null ? void 0 : e.x) ?? 0) / 1}px, ${((e == null ? void 0 : e.y) ?? 0) / 1}px, 0)`,
    cursor: T
  };
  return M(() => {
    const n = s.elementDrag === l;
    a(n);
  }, [s]), /* @__PURE__ */ t("div", { ref: h, ...u, ...I, style: {
    ...x
  }, children: o ? /* @__PURE__ */ t(H, { name: c, app: r, type: "folder" }) : /* @__PURE__ */ t(S, { app: r, isSelectable: !o && m, isSelected: !o && i || f && o, isFocused: f, onClick: D, onSelect: b, children: (n) => /* @__PURE__ */ N(S.Body, { children: [
    /* @__PURE__ */ t(G, { width: "48", height: "48", className: `color-app-${n}` }),
    /* @__PURE__ */ t(S.Title, { children: c })
  ] }) }) });
};
O.displayName = "FolderCard";
const ee = ({
  data: r
}) => {
  var u, g;
  const c = j(), l = A(), i = B(), m = C(), D = k(), {
    currentApp: b
  } = w(), {
    setSelectedFolders: o,
    setFolderIds: a,
    openFolder: p
  } = E();
  function F(e) {
    i.includes(e.id) ? (a(i.filter((s) => s !== e.id)), o(l.filter((s) => s.id !== e.id))) : (a([e.id, ...i]), o([e, ...l]));
  }
  function y(e) {
    D(), p({
      folder: e,
      folderId: e.id,
      queryClient: c
    });
  }
  const I = $({
    from: {
      opacity: 0
    },
    to: {
      opacity: 1
    }
  });
  return (u = r == null ? void 0 : r.pages[0]) != null && u.folders.length ? /* @__PURE__ */ t(v.ul, { className: "grid ps-0 list-unstyled mb-24", children: (g = r == null ? void 0 : r.pages[0]) == null ? void 0 : g.folders.map((e) => {
    const {
      id: s,
      name: d
    } = e, h = m.elementDrag === s;
    return /* @__PURE__ */ t(v.li, { className: `g-col-4 ${h ? "z-2000" : "z-1"}`, style: {
      position: "relative",
      ...I
    }, children: /* @__PURE__ */ t(O, { name: d, idFolder: s, app: b, isSelected: i.includes(e.id), onClick: (f) => {
      f.stopPropagation(), y(e);
    }, onSelect: () => F(e) }) }, s);
  }) }) : null;
};
export {
  ee as default
};
