import { Node } from '@tiptap/core';
/**
 * The `ConversationHistory` node is a custom ProseMirror node that represents a block-level
 * container for conversation history. It is implemented using the `@tiptap/core` library.
 *
 * @name ConversationHistory
 * @group block
 * @content block
 *
 * @parseHTML
 * This method defines how to parse the HTML representation of the node. It looks for a `div`
 * element with the class `conversation-history`.
 *
 * @renderHTML
 * This method defines how to render the node as HTML. It creates a `div` element with the class
 * `conversation-history`.
 *
 * @addProseMirrorPlugins
 * This method adds a ProseMirror plugin to the node. The plugin appends a transaction that groups
 * all nodes after a horizontal rule (`horizontalRule`) into a single `conversationHistory` node.
 *
 * @plugin
 * The plugin's `appendTransaction` method is called whenever a transaction is appended. It checks
 * for nodes after a horizontal rule and groups them into a `conversationHistory` node if any are
 * found.
 *
 * @param transactions - The list of transactions that have been applied.
 * @param oldState - The previous editor state.
 * @param newState - The new editor state.
 * @returns A new transaction if modifications were made, otherwise `null`.
 */
export declare const ConversationHistory: Node<any, any>;
