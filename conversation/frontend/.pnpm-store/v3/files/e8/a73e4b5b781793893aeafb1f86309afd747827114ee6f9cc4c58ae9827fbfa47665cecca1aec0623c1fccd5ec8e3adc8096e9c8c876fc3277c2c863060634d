import{Extension as t}from"@tiptap/core";import{Plugin as e,PluginKey as i}from"@tiptap/pm/state";import{DecorationSet as o,Decoration as s}from"@tiptap/pm/view";import a from"katex";const r=t=>{const{regex:r,katexOptions:n={}}=t;return new e({key:new i("mathematics"),state:{init:()=>o.empty,apply(t,e,i,p){const{selection:c}=p,d=[];return p.doc.descendants(((t,e)=>{if(t.isText&&t.text){let i;for(;i=r.exec(t.text);){const t=e+i.index,o=t+i[0].length,r=i[1];if(r){const e=c.$from.pos-c.$to.pos,i=c.$anchor.pos>=t&&c.$anchor.pos<=o,p=c.$from.pos>=t&&c.$to.pos<=o,m=0===e&&i||p;m||d.push(s.widget(t,(()=>{const t=document.createElement("span");t.classList.add("Tiptap-mathematics-render");try{a.render(r,t,n)}catch(e){t.innerHTML=r}return t}))),d.push(s.inline(t,o,{class:m?"Tiptap-mathematics-editor":"Tiptap-mathematics-editor Tiptap-mathematics-editor--hidden",style:m?void 0:"display: inline-block; height: 0; opacity: 0; overflow: hidden; position: absolute; width: 0;"}))}}}})),d.length>0?o.create(p.doc,d):o.empty}},props:{decorations(t){return this.getState(t)}}})},n=t.create({name:"Mathematics",addOptions:()=>({regex:/\$([^\$]*)\$/gi,katexOptions:void 0}),addProseMirrorPlugins(){return[r(this.options)]}});export{n as Mathematics,r as MathematicsPlugin,n as default};
