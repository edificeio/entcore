{ 
    "name": "{{ entcoreInfraVersion }}",
    "priority": 50,
    "waitDeploy" : true,
    "config" : {
        "main": "org.entcore.infra.Starter",
        "port": 8001,
        "mode": "{{ envMode|default('prod') }}",
	    "sameSiteValue": "{{ cookieSameSiteValue  | default('None') }}",
	    "encoding-available": ["Cp858", "Cp1250", "ISO-8859-1"],
	    "neo4jMetricsEnable": {{ neo4jMetricsEnable  | default('true') }},
        {% if infraNeo4jCheck is defined %}
	    "neo4jConfigOverride": {
        	"optimized-check-active": true
	    },
        {% endif %}
        {% if infraInstance is defined %}
        "instances": {{ infraInstance }},
        {% endif %}
        "auto-redeploy": false,
        "path-prefix": "infra",
        "ssl": {{ enableSsl|default(true) }},
        {% if antivirus is defined and antivirus %}
        "antivirus": true,
        {% endif %}
        {% if overrideTheme %} "override-theme": {}, {% endif %}
        {% if csp is defined %}"content-security-policy": "{{ csp }}",{% endif %}
        {% if csrfToken %}"csrf-token": true,{% endif %}
        "sql": true,
        {% if hardBounceCron is defined and hardBounceCron %}
        "hard-bounces-cron" : "0 0 6 * * ? *",
        {% else %}
        "hard-bounces-cron" : "0 0 1 * * ? 2099",
        {% endif %}
        "key": "{{ key }}",
        {% if skinLevels is defined %}
        "skin-levels": {{skinLevels}},
        {% endif %}
        "skins": {{ skins }} ,
        {% if gridfs is defined and gridfs %}
        "gridfs-address" : "wse.gridfs.persistor",
        {% else %}
        "file-system": {
            {% if fsStorages is defined %}
            "path": "{{storagePath |default('/srv/storage')}}",
            "paths" : {{ fsStorages }},
            {% else %}
            "path": "{{storagePath |default('/srv/storage')}}",
            {% endif %}
            "flat": false
            {% if antivirusCall is defined %}
            , "antivirus" : {{ antivirusCall }}
            {% endif %}
            {% if blockedExtensions is defined %},
            "blockedExtensions" : {{ blockedExtensions }}
            {% endif %}
        },
        {% endif %}
        "sharedConf": {
            {% if smsProvider is defined and smsProvider == 'OVH' %}
            "smsProvider": "OVH"
            {% endif %}
        },
        "emailConfig":
        {% if emailConfig is defined %}
        {{ emailConfig }}
        {% else %}
        {
            "email": "{{fromEmail}}",
            "host": "https://{{ host }}",
            "type": "SendInBlue",
            "api-key": "{{sendInBlueApiKey}}",
            "uri": "https://api.sendinblue.com:443",
            "split-recipients" : true,
            "ip": "{{sendInBlueApiIp}}"
            {% if emailConfigPg is defined %},
            "tracking-image": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+P//PwAGBAL/VJiKjgAAAABJRU5ErkJggg==",
            "postgresql":{
                "port": {{emailConfigPgPort |default('5432')}},
                "host": "{{emailConfigPg}}",
                "database": "{{emailConfigPgDb}}",
                "user": "{{emailConfigPgUser}}",
                "password": "{{emailConfigPgPwd}}"
            }
            {% endif %}
        }
        {% endif %}
        {% if eventStoreConfig is defined %}, 
        "event-store" : {{ eventStoreConfig }}
        {% endif %},
        "eventConfig": {
		    "event-whitelist": {{ eventWhitelist|default([]) }},
            "user-blacklist": {{ usersBlacklist|default([]) }}
        },
        "mfaConfig": {
            "types": {{ mfaTypes | default([]) }},
            "protectedUrls": {{ mfaProtectedUrls | default([]) }}
        },
        "emailValidationConfig": {
            "active": {{ emailValidationActive | default('true') }},
            "encryptKey": "{{ emailValidationEncryptKey | default('null') }}",
      	    "ttlInSeconds": {{ emailValidationTtl|default('600') }},
      	    "retryNumber": {{ emailValidationRetry|default('5') }},
      	    "waitInSeconds": {{ emailValidationWait|default('10') }}
        },
        "node-pdf-generator" : {
            "pdf-connector-id": "exportpdf",
            "auth": "{{ nodePdfToken }}",
            "url" : "{{ nodePdfUrl }}"
        },
        {% if explorerEnabled is defined %}
        "explorerConfig": {
            "enabled": true,
            "redis": {{ explorerRedis|default('true') }},
            "postgres": {{ explorerPostgres|default('false') }}
            {% if explorerRedisHost is defined %}
            ,"redisConfig": {
                "select": {{ explorerRedisSelect|default('0') }},
                "host": "{{ explorerRedisHost }}",
                "port": {{ explorerRedisHostPort |default('6379') }}
                {% if explorerRedisPassword is defined %},
                "auth": "{{ explorerRedisPassword }}"
                {% endif %}
                {% if explorerRedisMaxWaitingHandlers is defined %},
                "maxWaitingHandlers": {{ explorerRedisMaxWaitingHandlers }}
                {% endif %}
                {% if explorerRedisMaxPoolSize is defined %},
                "maxPoolSize": {{ explorerRedisMaxPoolSize }}
                {% endif %}
                {% if explorerRedisMaxPoolWaiting is defined %},
                "maxPoolWaiting": {{ explorerRedisMaxPoolWaiting }}
                {% endif %}
            }
           {% endif %}
           {% if explorerPostgresHost is defined %}
            ,"postgresConfig":{
                "host": "{{ explorerPostgresHost }}",
                "database": "{{explorerPostgresHostDb}}",
                "port": {{explorerPostgresPort | default(5432)}},
                "user": "{{ explorerPostgresUser }}",
                "password": "{{ explorerPostgresPassword }}",
                "pool-size": {{explorerPostgresPoolSize | default(50)}}
            }
           {% endif %}
        },
        {% endif %}
        {% if redisHost is defined %}
        "redisConfig": {
            "select": {{ redisSelect|default('0') }},
            "host": "{{ redisHost }}",
            "port": {{ redisPort|default('6379') }}
            {% if redis_password is defined %},
            "auth": "{{ redis_password }}"
            {% endif %}
            {% if redisMaxWaitingHandlers is defined %},
            "maxWaitingHandlers": {{ redisMaxWaitingHandlers }}
            {% endif %}
            {% if redisMaxPoolSize is defined %},
            "maxPoolSize": {{ redisMaxPoolSize }}
            {% endif %}
            {% if redisMaxPoolWaiting is defined %},
            "maxPoolWaiting": {{ redisMaxPoolWaiting }}
            {% endif %}
        },
        {% endif %}
        {% if oauthCache is defined %}
        "oauthCache":{
            "enabled": {{oauthCache}}
        },
        {% endif %}
        {% if webviewFilter is defined %}
        "webviewConfig": {
            "enabled": {{webviewFilter}},
            "whitelist": {{ webviewFilterWhitelist|default([]) }},
            "illegal-page": "{{ webviewFilterPage|default('/illegal-app.html') }}",          
	        "blacklist": {{ webviewFilterBlacklist|default([]) }}
        },
        {% endif %}
	    "mongoConfig": {
        	{% if mongo_password is defined %}
                "username": "{{ mongo_user }}",
                "password": "{{ mongo_password }}",
                "authSource": "{{ dbName }}",
            {% endif %}
            "hosts": [
            {% if ipMongodb is defined %}
                {% for ip in ipMongodb %}
                {
                    "host": "{{ ip }}",
                    "port": 27017
                }{% if not(loop.last) %},{% endif %}
                {% endfor %}
            {% else %}
                {% for ip in dbip %}
                {
                    "host": "{{ ip }}",
                    "port": 27017
                }{% if not(loop.last) %},{% endif %}
                {% endfor %}
            {% endif %}
            ],
            "db_name": "{{ dbName }}",
            {% if (readPreferenceMongo is defined and readPreferenceMongo) %}
            "readPreference": "nearest",
            {% endif %}
            {% if socketTimeoutMongo is defined %}
            "socketTimeoutMS":{{socketTimeoutMongo}},
            {% endif %}
            {% if mongoMaxPoolSize is defined %}
            "maxPoolSize":{{mongoMaxPoolSize}},
            {% endif %}
            {% if mongoMinPoolSize is defined %}
            "minPoolSize":{{mongoMinPoolSize}},
            {% endif %}
            "use_mongo_types": true,
            "ssl": {{mongoSsl | default('false')}}
	    },
        "postgresConfig":{
            {% if ipPostgresMaster is defined %}
            "host": "{{ ipPostgresMaster }}",
            {% else %}
                {% if ipPostgres is defined %}
            "host": "{{ ipPostgres | first }}",
                {% else %}
            "host": "{{ dbip | first }}",
                {% endif %}
            {% endif %}
            "database": "{{dbName}}",
            "port": {{postgresPort | default(5432)}},
            "user": "{{ userPostgres }}",
            "password": "{{ passwordPostgres }}",
            "pool-size": {{postgresPoolSize | default(50)}}
        },
        "neo4jConfig": {
            "poolSize": 100, "checkDelay": 30000,
	        "optimized-check-enable": {{ neo4jOptimizedEnable | default('true') }},
	        "optimized-check-delay": {{ neo4jOptimizedDelay | default('10000') }},
            {% if neo4j_password is defined %}
            "username": "{{ neo4j_user }}",
            "password": "{{ neo4j_password }}",
            {% endif %}
            "server-uris": [
                {% if ha %}
                    {% if ipNeo4j is defined %}
                        {% for ip in ipNeo4j %}
                "http://{{ ip }}:7474/db/data/"{% if not(loop.last) %},{% endif %}
                        {% endfor %}
                    {% else %}
                        {% for ip in dbip %}
                "http://{{ ip }}:7474/db/data/"{% if not(loop.last) %},{% endif %}
                        {% endfor %}
                    {% endif %}
                {% else %}
                "http://{{ ipNeo4j|default('localhost') }}:7474/db/data/"
                {% endif %}
            ],
            {% if ha %}
                {% if ipNeo4j is defined %}
            "slave-readonly": {% if ipNeo4j|length > 1 %}true{% else %}false{% endif %}
                {% else %}
            "slave-readonly": {% if dbip|length > 1 %}true{% else %}false{% endif %}
                {% endif %}
            {% else %}
            "slave-readonly": false
            {% endif %}
        }
    }
}