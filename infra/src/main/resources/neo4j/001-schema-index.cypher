CREATE CONSTRAINT ON (s:System) ASSERT s.name IS UNIQUE;
CREATE INDEX ON :Action(type);
CREATE CONSTRAINT ON (action:Action) ASSERT action.name IS UNIQUE;
CREATE CONSTRAINT ON (role:Role) ASSERT role.id IS UNIQUE;
CREATE CONSTRAINT ON (role:Role) ASSERT role.name IS UNIQUE;
CREATE CONSTRAINT ON (application:Application) ASSERT application.id IS UNIQUE;
CREATE CONSTRAINT ON (application:Application) ASSERT application.name IS UNIQUE;
CREATE CONSTRAINT ON (visible:Visible) ASSERT visible.id IS UNIQUE;
CREATE CONSTRAINT ON (u:UserBook) ASSERT u.userid IS UNIQUE;
CREATE CONSTRAINT ON (sub:Subject) ASSERT sub.id IS UNIQUE;
CREATE CONSTRAINT ON (sub:Subject) ASSERT sub.externalId IS UNIQUE;
CREATE CONSTRAINT ON (fg:FunctionalGroup) ASSERT fg.externalId IS UNIQUE;
CREATE CONSTRAINT ON (fg:FunctionalGroup) ASSERT fg.id IS UNIQUE;
CREATE INDEX ON :User(firstName);
CREATE INDEX ON :User(lastName);
CREATE INDEX ON :User(birthDate);
CREATE INDEX ON :User(source);
CREATE CONSTRAINT ON (u:User) ASSERT u.IDPN IS UNIQUE;
CREATE INDEX ON :User(attachmentId);
CREATE CONSTRAINT ON (structure:Structure) ASSERT structure.id IS UNIQUE;
CREATE CONSTRAINT ON (structure:Structure) ASSERT structure.externalId IS UNIQUE;
CREATE CONSTRAINT ON (structure:Structure) ASSERT structure.UAI IS UNIQUE;
CREATE CONSTRAINT ON (fos:FieldOfStudy) ASSERT fos.id IS UNIQUE;
CREATE CONSTRAINT ON (fos:FieldOfStudy) ASSERT fos.externalId IS UNIQUE;
CREATE CONSTRAINT ON (module:Module) ASSERT module.id IS UNIQUE;
CREATE CONSTRAINT ON (module:Module) ASSERT module.externalId IS UNIQUE;
CREATE CONSTRAINT ON (user:User) ASSERT user.id IS UNIQUE;
CREATE CONSTRAINT ON (user:User) ASSERT user.externalId IS UNIQUE;
CREATE CONSTRAINT ON (user:User) ASSERT user.login IS UNIQUE;
CREATE INDEX ON :User(displayNameSearchField);
CREATE CONSTRAINT ON (profile:Profile) ASSERT profile.id IS UNIQUE;
CREATE CONSTRAINT ON (profile:Profile) ASSERT profile.externalId IS UNIQUE;
CREATE CONSTRAINT ON (profile:Profile) ASSERT profile.name IS UNIQUE;
CREATE CONSTRAINT ON (function:Function) ASSERT function.id IS UNIQUE;
CREATE CONSTRAINT ON (function:Function) ASSERT function.externalId IS UNIQUE;
CREATE CONSTRAINT ON (function:Functions) ASSERT function.id IS UNIQUE;
CREATE CONSTRAINT ON (function:Functions) ASSERT function.externalId IS UNIQUE;
CREATE CONSTRAINT ON (class:Class) ASSERT class.id IS UNIQUE;
CREATE CONSTRAINT ON (class:Class) ASSERT class.externalId IS UNIQUE;
CREATE CONSTRAINT ON (group:Group) ASSERT group.id IS UNIQUE;
CREATE CONSTRAINT ON (group:Group) ASSERT group.externalId IS UNIQUE;
